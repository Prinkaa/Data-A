# DATAFRAMES

# Dataframes are different from matrices as they allow more than one data type to be held
# When importing data into R, it will usually be imported as a dataframe
mtcars                                      # A built in dataframe in R

# Using head() and tail()
head(mtcars, 3)                             # This will show you the headers and the first 3 observations
tail(mtcars, 4)                             # This will show you the headers and the last 4 observations

# Use str() to get an overview of the structure of your dataframe
str(mtcars)                                
# It will list the number of observations and variables, a full list of variable names, the data type of each variable and the first few observations.

# Creating a data frame 

name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")   # Define your vectors
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet", 
          "Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)

planets_df <- data.frame(name, type, diameter, rotation, rings)                            # Create a data frame from the vectors
planets_df

# You MUST ensure your observations are in the correct order or your data will be incorrect
# Selection is exactly the same as with the other data structures
planets_df[1,3]                                                                            # Print out diameter of Mercury (row 1, column 3)
planets_df[4,]                                                                             # Print out data for Mars (entire fourth row)
planets_df[1:5,"diameter"]                                                                 # Select first 5 values of diameter column

# Now that we have named ranges i.e. column and row names we can also use $ for selection:

rings_vector <- planets_df$rings                                                           # Select the rings variable from planets_df
rings_vector

# Use subset() as a quicker way to select specific variables or specific observations that meet a give requirement

subset(planets_df, subset= diameter < 1)                                                   # Select planets with diameter < 1

# Use order() to sort your data
a <- c(100, 10, 1000)                                                                      
order(a)
# As you can see it will assign a numerical value to each element and refer to those values when sorting
# You can use this output to reorder the initial vector:
a[order(a)]

# Using order with your data frame

positions <-  order(planets_df$diameter)                                                   # Use order() to create positions
planets_df[positions,]                                                                     # Use positions to sort planets_df





